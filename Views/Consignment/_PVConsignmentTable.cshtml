@using VoucherCapture.ViewModel
@model List<ConsignmentItem_ViewModel>

@if (Model.Count == 0)
{
    <div class="alert alert-dark text-center" role="alert">
        <i class="bi bi-inbox" style="font-size: 3rem; margin-bottom: 10px;"></i>
        <h4>No hay artículos de consignación</h4>
        <p>No se encontraron artículos que coincidan con los filtros aplicados</p>
    </div>
}
else
{
    <table class="table table-secondary table-striped-columns table-bordered text-center align-middle">
        <thead>
            <tr>
                <th width="10%">Clave</th>
                <th width="35%">Descripción</th>
                <th width="8%">Unidad</th>
                <th width="10%">Stock Actual</th>
                <th width="10%">Min/Max</th>
                <th width="8%">Estado</th>
                <th width="10%">Consignación</th>
                <th width="9%">Acciones</th>
            </tr>
        </thead>
        <tbody class="table-group-divider">
            @foreach (var item in Model)
            {
                string statusColor = item.Status switch
                {
                    "Bajo" => "text-danger",
                    "Alto" => "text-info",
                    _ => "text-success"
                };

                string statusIcon = item.Status switch
                {
                    "Bajo" => "bi-arrow-down",
                    "Alto" => "bi-arrow-up",
                    _ => "bi-check-circle"
                };

                <tr data-status="@item.Status">
                    <th>@item.MicrosipKey</th>
                    <td style="text-align: left;">
                        <strong>@item.Description</strong>
                        @if (!string.IsNullOrEmpty(item.LastUpdate))
                        {
                            <br>
                
                            <small class="text-muted">
                                <i class="bi bi-clock"></i> @item.LastUpdate
                            </small>
                        }
                    </td>
                    <td>@item.UnitType</td>
                    <td>
                        <button class="btn btn-outline-primary btn-sm"
                                onclick="updateStock(@item.IdSupply, @item.CurrentStock)"
                                title="Clic para actualizar stock">
                            <strong>@item.CurrentStock.ToString("N2")</strong>
                        </button>
                    </td>
                    <td>
                        <button class="btn btn-outline-secondary btn-sm"
                                onclick="setMinMaxStock(@item.IdSupply, @item.MinimumStock, @item.MaximumStock)"
                                title="Clic para editar límites">
                            @item.MinimumStock.ToString("N0")/@item.MaximumStock.ToString("N0")
                        </button>
                    </td>
                    <td>
                        <span class="@statusColor">
                            <i class="bi @statusIcon"></i> @item.Status
                        </span>
                    </td>
                    <td>
                        @if (item.IsConsignment)
                        {
                            <button class="btn btn-success btn-sm"
                                    onclick="toggleConsignment(@item.IdSupply, true)"
                                    title="Clic para quitar de consignación">
                                <i class="bi bi-check-circle"></i> Activo
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-outline-secondary btn-sm"
                                    onclick="toggleConsignment(@item.IdSupply, false)"
                                    title="Clic para marcar como consignación">
                                <i class="bi bi-circle"></i> Inactivo
                            </button>
                        }
                    </td>
                    <td>
                        <div class="d-grid gap-2 d-md-block">
                            <button class="btn btn-info btn-sm"
                                    onclick="updateStock(@item.IdSupply, @item.CurrentStock)"
                                    title="Actualizar stock">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="btn btn-warning btn-sm"
                                    onclick="setMinMaxStock(@item.IdSupply, @item.MinimumStock, @item.MaximumStock)"
                                    title="Configurar límites">
                                <i class="bi bi-gear"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    @if (ViewBag.Pages > 1)
    {
        <div id="pages">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @for (int i = ViewBag.MinPage; i <= ViewBag.MaxPage; i++)
                    {
                        string activeClass = ViewBag.ActualPage == i ? "active" : "";
                        <li class="page-item @activeClass">
                            <a class="page-link" onclick="GetData(@i)">@i</a>
                        </li>
                    }
                </ul>
            </nav>
            <p class="text-center" style="color: dimgray; font-size: 10px; font-style: italic">
                Página @ViewBag.ActualPage de @ViewBag.Pages
            </p>
        </div>
    }
}